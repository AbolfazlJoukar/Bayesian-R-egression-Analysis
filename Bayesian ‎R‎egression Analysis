rm(list=ls(all=TRUE))
library(truncnorm)
library(MASS)
#---------------------------------------------------------------
n=20
m=12
R1=c(rep(0,(6)),(n-m),rep(0,5))
#R1=c(rep(0,(m-1)),(n-m))
#R1=c((n-m),rep(0,(m-1)))
#R1=c(rep(0,(m-1)),(n-m))
#---------------------------------------------------------------
T=6000
M=1000
N=1
s2=0.1
beta=c(1,2.5)
#---------------------------------------------------------------
beta1.had=beta2.had=numeric(N)
RMSE.beta1=RMSE.beta2=numeric(N)
Rbias.beta1=Rbias.beta2=numeric(N)
rate=numeric(N)
for(k in 1:N){

plot(k,k,xlim=c(k-1,k+1))
text(x=k+1,y=k,k,col="red")
#---------------------------------------------------------------
x1=rnorm(m,0,1)
x2=rnorm(m,0,1)
mu=((x1*beta[1])+(x2*beta[2]))^2
#---------------------------------------------------------------
W1=runif(m)
V1=numeric(m)
for(i in 1:m){
FF1=function(yy){
sum1=0
for(j in (m-yy+1):m){
O1=R1[j]
sum1=sum1+O1
}
return(sum1)
}
V1[i]=W1[i]^(1/(i+FF1(i)))
}
u1=numeric(m)
for(i in 1:m){
FF2=function(yy1){
prod1=1
for(j in (m-yy1+1):m){
O2=V1[j]
prod1=prod1*O2
}
return(prod1)
}
u1[i]=1-FF2(i)
}
y=numeric(m)
for(i in 1:m){
y[i]=((log(1-u1[i]))^2)/(2*mu[i])
}
#---------------------------------------------------------------
eta0=c(0,0)
sigma0=matrix(c(100,0,0,100),nrow=2)

sigma.star=matrix(c(0.001,-0.001,-0.001,0.001),nrow=2)
#---------------------------------------------------------------
beta1.star=beta2.star=numeric(T-1)
beta1.bayes=beta2.bayes=numeric(T)
F3=F4=G3=G4=rho2=numeric(T-1)

beta1.bayes[1]=1.15
beta2.bayes[1]=2.4

j2=0

m.star=which(R1>0)

u.bayes1=matrix(numeric(T*R1[m.star]),nrow=T,ncol=R1[m.star])
u.bayes1[1,]=y[m.star]

for(t in 2:T){

for(jj in 1:R1[m.star]){
u.star=rtruncnorm(n=1,a=0,b=Inf,mean=u.bayes1[(t-1),jj],sd=sqrt(s2))
G1=dtruncnorm(u.bayes1[(t-1),jj],a=0,b=Inf,mean=u.star,sd=sqrt(s2))
G2=dtruncnorm(u.star,a=0,b=Inf,mean=u.bayes1[(t-1),jj],sd=sqrt(s2))

F1=(-sum((x1[m.star]*beta1.bayes[t-1])+(x2[m.star]*beta2.bayes[t-1]))*sqrt(u.star))
F2=(-sum((x1[m.star]*beta1.bayes[t-1])+(x2[m.star]*beta2.bayes[t-1]))*sqrt(u.bayes1[(t-1),jj]))

rho1=(F1+log(G1))-(F2+log(G2))
if(runif(1)<exp(rho1)){
u.bayes1[t,jj]=u.star
}else{
u.bayes1[t,jj]=u.bayes1[(t-1),jj]
}
}
#---------------------------------------------------------------
teta=mvrnorm(1,c(beta1.bayes[t-1],beta2.bayes[t-1]),sigma.star)
beta1.star[t]=teta[1]
beta2.star[t]=teta[2]

mu.star1=((x1*beta1.star[t])+(x2*beta2.star[t]))^2
mu.star2=((x1*beta1.bayes[t-1])+(x2*beta2.bayes[t-1]))^2

G3[t]=(-sum(sqrt(mu.star1)*(sqrt(y)+sum(sqrt(u.bayes1[t,])))))
G4[t]=(-sum(sqrt(mu.star2)*(sqrt(y)+sum(sqrt(u.bayes1[t,])))))

F3[t]=-(1/2)*(((t(c(beta1.star[t],beta2.star[t])-c(0,0))%*%solve(sigma0)%*%(c(beta1.star[t],beta2.star[t])-c(0,0)))))+sum(log(((x1*beta1.star[t])+(x2*beta2.star[t]))^2))
F4[t]=-(1/2)*(((t(c(beta1.bayes[t-1],beta2.bayes[t-1])-c(0,0))%*%solve(sigma0)%*%(c(beta1.bayes[t-1],beta2.bayes[t-1])-c(0,0)))))+sum(log(((x1*beta1.bayes[t-1])+(x2*beta2.bayes[t-1]))^2))


rho2[t]=(F3[t]+G3[t])-(F4[t]+G4[t])
if(runif(1)<exp(rho2[t])){
beta1.bayes[t]=beta1.star[t]
beta2.bayes[t]=beta2.star[t]
j2=j2+1
}else{
beta1.bayes[t]=beta1.bayes[t-1]
beta2.bayes[t]=beta2.bayes[t-1]
}
}
rate[k]=j2/T
beta1.had[k]=mean(beta1.bayes[(M+1):T])
beta2.had[k]=mean(beta2.bayes[(M+1):T])
}
#---------------------------------------------------------------
beta1.HAD=mean(beta1.had)
RMSE.beta1=sqrt(mean((beta1.had-beta[1])^2))
Rbias.beta1=mean((beta1.had-beta[1])/beta[1])

beta2.HAD=mean(beta2.had)
RMSE.beta2=sqrt(mean((beta2.had-beta[2])^2))
Rbias.beta2=mean((beta2.had-beta[2])/beta[2])
#---------------------------------------------------------------
beta1.HAD
RMSE.beta1
Rbias.beta1

beta2.HAD
RMSE.beta2
Rbias.beta2
#--------------------------------------------------------------------------------------------------------------------
#                                                     plot1
#--------------------------------------------------------------------------------------------------------------------
beta1.bayes2=beta1.bayes[(M+1):T]
beta2.bayes2=beta2.bayes[(M+1):T]

beta1.bayes22=beta2.bayes22=numeric(T-M)
for(t in 1:(T-M)){
beta1.bayes22[t]=mean(beta1.bayes2[1:t])
beta2.bayes22[t]=mean(beta2.bayes2[1:t])
}

par(mfrow=c(2,3))
plot(1:(T-M),beta1.bayes22,type="l",col="blue",xlab="T",ylab="")
title(main=expression(beta[1]))

acf(beta1.bayes2,col="blue",main="")
title(main=expression(beta[1]))

pacf(beta1.bayes2,col="blue",ylab="PACF",main="")
title(main=expression(beta[1]))
#--------------------------------------------------------------------------------------------------------------------
plot(1:(T-M),beta2.bayes22,type="l",col="blue",xlab="T",ylab="")
title(main=expression(beta[2]))

acf(beta2.bayes2,col="blue",main="")
title(main=expression(beta[2]))

pacf(beta2.bayes2,col="blue",ylab="PACF",main="")
title(main=expression(beta[2]))


#--------------------------------------------------------------------------------------------------------------------
#                                                     plot2
#--------------------------------------------------------------------------------------------------------------------
par(mfrow=c(2,3))
plot(1:(T-M),beta1.bayes[(M+1):T],type="l",col="blue",xlab="T",ylab="")
title(main=expression(beta[1]))

acf(beta1.bayes[(M+1):T],col="blue",main="")
title(main=expression(beta[1]))

pacf(beta1.bayes[(M+1):T],col="blue",ylab="PACF",main="")
title(main=expression(beta[1]))
#--------------------------------------------------------------------------------------------------------------------
plot(1:(T-M),beta2.bayes[(M+1):T],type="l",col="blue",xlab="T",ylab="")
title(main=expression(beta[2]))

acf(beta2.bayes[(M+1):T],col="blue",main="")
title(main=expression(beta[2]))

pacf(beta2.bayes[(M+1):T],col="blue",ylab="PACF",main="")
title(main=expression(beta[2]))


